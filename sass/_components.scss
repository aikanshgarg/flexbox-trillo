// LOGO

.logo {
	height: 3.25rem;
	margin-left: 2rem;
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SEARCH
.search {
	flex: 0 0 40%; // 0grow 0shrink	40%width
	display: flex; // flex item becomes flex container(nested flex box): to center the item
	align-items: center; // center along cross axis
	justify-content: center; // center along main axis

	@media only screen and (max-width: $bp-smallest) {
		order: 1; // search will move to the end, as by default order = 0
		flex: 0 0 100%; // increasing width so that search bar comes in a new row
		background-color: var(--color-grey-light-2);
	}

	// input type don't inherit styles by default
	&__input {
		font-family: inherit; 
		font-size: inherit; // parent has font size of 16px
		color: inherit;
		background-color: var(--color-grey-light-2);
		border: none;
		padding: .7rem 2rem;
		border-radius: 100px;
		width: 90%;
		transition: all .2s;
		margin-right: -3.25rem;

		&:focus {
			outline: none; // remove default
			width: 100%;
			background-color: var(--color-grey-light-3);

			@media only screen and (max-width: $bp-smallest) {
				width: 90%;
			}
		}

		&::-webkit-input-placeholder {
			font-weight: 100;
			color: var(--color-grey-light-4);
		}
	}

	// sibling selector(adjacent)
	&__input:focus + &__button {
		background-color: var(--color-grey-light-3);
	}

	&__button {
		border: none;
		background-color: var(--color-grey-light-2);
		cursor: pointer;

		&:focus {
			outline: none;
		}

		&:active {
			transform: translateY(2px);
		}
	}

	&__icon {
		height: 2rem;
		width: 2rem;
		fill: var(--color-grey-dark-3); // to color SVG's
	}
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// USER NAV
.user-nav {
	display: flex; // flex item becomes flex container(nested flex box): to align children side-by-side
	align-items: center; // center along cross axis
	align-self: stretch; // so that all icons take up entire height of header

	// select all DIRECT(>) children of user-nav
	& > * {
		padding: 0 2rem;
		cursor: pointer;
		height: 100%; // so that all icons take up entire height of header
		display: flex; // third level flex nesting
		align-items: center; // along cross axis (vertically)
	}
	& > *:hover{
		background-color: var(--color-grey-light-2);
	}

	&__icon-box {
		position: relative; // parent of notification
	}

	&__icon {
		height: 2.5rem;
		width: 2.5rem;
		fill: var(--color-grey-dark-2);
		
	}

	&__notification {
		font-size: 0.8rem;
		border-radius: 50%;
		background-color: var(--color-primary);
		color: #fff;
		height: 1.75rem;
		width: 1.75rem;
		position: absolute; // to position over svg icon
		top: 1.5rem;
		right: 1.1rem;

		display: flex; // 4th level flex nesting to center text
		justify-content:center; // main: x-axis
		align-items:center; // cross: y-axis
	}

	&__user-photo {
		border-radius: 50%;
		height: 3.75rem;
		width: 3.75rem;
		margin-right: 1rem;
	}

	&__user-name {
		color: #333;
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SIDE NAVIGATION
.side-nav {
	font-size: 1.4rem;
	list-style: none;
	margin-top: 3.5rem;

	@media only screen and (max-width: $bp-medium) {
		display: flex; // to align items of side-nav side-by-side
		margin: 0;
	}

	&__item{ 
		position: relative; // parent of before pseudo
		backface-visibility: hidden; // HACK to prevent shaky animation
		
		&:not(:last-child) {
			margin-bottom: .5rem;

			@media only screen and (max-width: $bp-medium) {
				margin-bottom: 0;
			}
		}

		@media only screen and (max-width: $bp-medium) {
			flex: 1; // flex-grow: 1; allow all items to occupy as much space as possible, all will get equal space of 1/4th
		}
	}

	&__item::before {
		content: ""; // required
		position: absolute;
		top: 0;
		left: 0;
		height: 100%; // same height as list item
		width: 3px;
		background-color: var(--color-primary);
		transform: scaleY(0); // animation
		transition: transform .2s, 
					width .4s cubic-bezier(1,0,0,1) .2s,
					background-color .1s; //.2s is delay in width transition
	}

	&__item:hover::before,
	&__item--active::before {
		transform: scaleY(1);
		width: 100%; // from 3px to 100% 
	}

	&__item:active::before { // on clicking li item
		background-color: var(--color-primary-light);
	}

	&__link:link,
	&__link:visited {
		text-decoration: none;
		color: var(--color-grey-light-1);
		text-transform: uppercase;
		display: inline-block;
		padding: 1.5rem 3rem;
		position: relative; // for z-index to work, we need position to be defined
		z-index: 10; // on top of before element

		display: flex; // parent
		align-items: center; // center on cross axis (Y-axis here)

		@media only screen and (max-width: $bp-medium) {
			justify-content: center; // along (main)x-axis
			padding: 2rem;
		}

		@media only screen and (max-width: $bp-small) {
			flex-direction: column;
			padding: 1.5rem .5rem;
		}

	}


	&__icon {
		width: 1.75rem;
		height: 1.75rem;
		fill: currentColor; // current color or color of parent element
		margin-right: 2rem;

		@media only screen and (max-width: $bp-small) {
			margin: 0;
			margin-bottom: .7rem;
			width: 1.5rem;
			height: 1.5rem;
		}
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// LEGAL TEXT
.legal {
	font-size: 1.2rem;
	color: var(--color-grey-light-4);
	text-align: center;
	padding: 2.7rem;

	@media only screen and (max-width: $bp-medium) {
		display: none;
	}

	&__link {
		text-decoration: none;
		color: inherit;// from parent(legal)
		display: inline-block; // to make rotate work
		transition: all .2s;
	}
	&__link:hover {
		padding: 1.5px 3px;
		border-radius: 3px;
		color: #FF3366;
		background-color: var(--color-grey-dark-1);
		-webkit-box-shadow: 0 1rem 2rem rgba(0,0,0,0.4);
    	box-shadow: 0 1rem 2rem rgba(0,0,0,0.4);
		transform: rotate(5deg) scale(1.2);
	}
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GALLERY
.gallery {
	display: flex;

	&__photo {
		width: 100%; // responsive images should always be fluid, have height or width in %
		display: block; // because figure element also is display: block
	}
}



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// HOTEL OVERVIEW
.overview {
	display: flex; // parent of heading, stars, location and rating
	align-items: center; // center on cross axis(y-axis here)
	border-bottom: var(--line);

	&__heading {
		font-size: 2.25rem;
		font-weight: 300;
		text-transform: uppercase;
		letter-spacing: 1px;
		padding: 1.5rem 3rem;

		@media only screen and (max-width: $bp-small) {
			font-size: 1.8rem;
			padding: 1.25rem 2rem;
		}

		@media only screen and (max-width: $bp-phone) {
			text-align: center;
		}
	}

	&__stars {
		display: flex; // remove space between stars
		margin-right: auto; // very USEFUL & IMPORTANT property in FLEXBOX!!!
	}

	&__icon-star,
	&__icon-location {
		width: 1.75rem;
		height: 1.75rem;
		fill: var(--color-primary);
	}

	&__location {
		font-size: 1.2rem;
		display: flex;
		align-items: center; // center on cross axis (Y-axis here)
	}

	&__icon-location{
		margin-right: .5rem;

		@media only screen and (max-width: $bp-phone) {
			margin-right: 0;
			margin-left: 3rem;
			width: 2.25rem;
			height: 2.25rem;			
		}
	}

	&__rating {
		background-color: var(--color-primary);
		margin-left: 3rem;
		color: #fff;
		padding: 0 2.25rem;
		align-self: stretch; // so that all icons take up entire height of parent

		display: flex; // to center the elements
		flex-direction: column;
		align-items: center; // cross axis
		justify-content: center; // main axis

		@media only screen and (max-width: $bp-small) {
			padding: 0 1.5rem;
		}
	}

	&__rating-average {
		font-size: 2.25rem;
		font-weight: 300;
		margin-bottom: -3px;

		@media only screen and (max-width: $bp-small) {
			font-size: 1.8rem;
		}
	}

	&__rating-count {
		font-size: .8rem;
		text-transform: uppercase;

		@media only screen and (max-width: $bp-small) {
			font-size: .5rem;
		}

		@media only screen and (max-width: $bp-phone) {
			text-align: center;
			margin-top: 2px;
		}
	}
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BUTTON INLINE (location button)
.btn-inline {
	border: none; // remove default styling
	color: var(--color-primary);
	font-size: inherit;
	background: transparent;
	border-bottom: 1px solid currentColor; // border has same color as text
	padding-bottom: 2px;
	display: inline-block;
	cursor: pointer;
	transition: all .2s;

	&:hover {
		color: var(--color-grey-dark-1);

		span {
			margin-left: 8px;
			transition: margin-left .2s;
		}
	}

	&:focus {
		outline: none; // remove default styling
		animation: pulse 1s infinite;
	}

	& span {
		margin-left: 3px;
	}
}

// pulsating animation
@keyframes pulse {
	0% {
		transform: scale(1);
		box-shadow: none;
	}

	50% {
		transform: scale(1.05);
		box-shadow: 0 1rem 4rem rgba(0,0,0,.25);
	}

	100% {
		transform: scale(1);
		box-shadow: none;
	}
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PARAGRAPH
.paragraph {
	&:not(:last-of-type) {
		margin-bottom: 2rem; 
	}
}



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// LIST
.list {
	list-style: none;
	margin: 3rem 0;
	padding: 3rem 0;
	border-top: var(--line);
	border-bottom: var(--line);

	display: flex;
	flex-wrap: wrap; // newline allowed

	&__item {
		flex: 0 0 50%; // width is 50% so that we have 2 elements side by side
		margin-bottom: .7rem;

		@media only screen and (max-width: $bp-phone) {
			//font-size: 1.1rem;	
		}
	}

	&__item::before {
		content: "";
		display: inline-block;
		height: 1rem;
		width: 1rem;
		margin-right: .7rem;

		// Older browsers
		background-image: url('../img/chevron-thin-right.svg');
		background-size: cover;

		// Newer browsers --> MASK (we can peek through)
		@supports (-webkit-mask-image: url()) or (mask-image: url()) {
			background-color: var(--color-primary);
			-webkit-mask-image:url('../img/chevron-thin-right.svg');
			-webkit-mask-size: cover; // to fit icon inside completely
			mask-image:url('../img/chevron-thin-right.svg');
			mask-size: cover;
			background-image: none;
		}	
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RECOMMEND
.recommend {
	font-size: 1.3rem;
	color: var(--color-grey-dark-3);
	
	display: flex;
	align-items: center; // vertical align (cross axis)

	&__count {
		margin-right: auto;
	}

	&__friends {
		display: flex; // to make sure photos always remain side by side
	}

	&__photo {
		box-sizing: content-box; // setting box-sizing to deafult of content-box, so that padding and margin are added on top of an element and not inside it 
		border-radius: 50%;
		height: 4rem;
		width: 4rem;
		border: 3px solid #fff;

		&:not(:last-child) {
			margin-right: -2rem; // gives the effect of images overlapping
		}
	}
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// USER-REVIEWS
.review {
	background-color: #fff;
	box-shadow: var(--shadow-light);
	padding: 3rem;
	margin-bottom: 3.5rem;
	position: relative; // parent(posn for " styling)
	overflow: hidden;

	@media only screen and (max-width: $bp-medium) {
		padding: 2rem;
		margin-bottom: 3rem;
	}

	&__text {
		margin-bottom: 2rem;
		z-index: 10;
		position: relative; // required for z-index to work
	}

	&__user{ 
		display: flex;
		align-items: center;
	}

	&__photo {
		height: 4.5rem;
		width: 4.5rem;
		border-radius: 50%;
		margin-right: 1.5rem;
	}

	&__user-box {
		margin-right: auto; // very USEFUL property in flex!!!
	}

	&__user-name {
		text-transform: uppercase;
		font-weight: 600;
		font-size: 1.1rem;
		margin-bottom: .4rem;
	}

	&__user-date {
		font-size: 1rem;
		color: var(--color-grey-dark-3);
	}

	&__user-rating {
		color: var(--color-primary);
		font-size: 2.2rem;
		font-weight: 300;
	}

	// for making a quotation mark
	&::before {
		content: "\201C";
		position: absolute;
		top: -3.4rem;
		left: -1rem;
		line-height: 1;
		font-size: 20rem;
		font-family: sans-serif;
		color: var(--color-grey-light-2);
		z-index: 1;
	}
}




/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CALL TO ACTION
.cta {
	padding: 3.5rem 0;
	text-align: center;

	@media only screen and (max-width: $bp-medium) {
		padding: 2.5rem 0;
	}

	&__book-now {
		font-size: 	1.7rem;
		font-weight: 300;
		margin-bottom: 2.5rem;
		text-transform: uppercase;
		color: var(--color-grey-dark-1);
	}
}

.btn {
	font-size: 1.5rem;
	font-weight: 300;
	text-transform: uppercase;
	border-radius: 100px;
	border: none;
	background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
	color: #fff;
	cursor: pointer;
	position: relative; // parent
	overflow: hidden; // to hide invisible span

	&:focus {
		outline: none;
		animation: pulse 1s infinite;
	}

	& > * { // styles common to direct children of btn: btn__invisible and btn__visible 
		display: inline-block; // span element, by default, has display inline block
		height: 100%;
		width: 100%;
		transition: all .2s;
	}

	&__visible {
		padding: 2rem 7.5rem;
	}

	&__invisible {
		position: absolute;
		padding: 2rem 0;
		left: 0;
		top: -100%; // button moves entirely up to be hidden
	}

	&:hover {
		background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
	}

	&:hover &__visible {
		transform: translateY(100%);
	}

	&:hover &__invisible {
		top: 0;
	}
}